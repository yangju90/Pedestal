<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="true">
<!--    https://blog.csdn.net/u010953880/article/details/113736340   -->
<!--    https://blog.csdn.net/chenghuang2019/article/details/100908712 -->
<!--    https://blog.csdn.net/cw_hello1/article/details/51969554 -->
<!--   自定义Layouts http://logback.qos.ch/manual/layouts.html -->
<!--    https://www.jianshu.com/p/a0eb78b8c775?utm_campaign=maleskine&utm_content=note&utm_medium=seo_notes&utm_source=recommendation -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers class="net.logstash.logback.composite.loggingevent.LoggingEventJsonProviders">
                <pattern>
                    <pattern>
                        {"timestamp": "%d{yyyy-MM-dd HH:mm:ss.SSS, UTC}", "level": "%-5p", "thread": "%t", "class": "%-40.40logger{39}", "message": "%m", "exception": "%ex"}
                    </pattern>
                </pattern>
            </providers>
        </encoder>
    </appender>

    <root level="INFO">
        <appender-ref ref="CONSOLE" />
    </root>
</configuration>


<!--logging.charset.console: Charset to use for console output.-->
<!--logging.charset.file: Charset to use for file output.-->
<!--logging.exception-conversion-word: Conversion word used when logging exceptions. %wEx-->
<!--logging.file.name: Log file name (for instance, `myapp.log`). Names can be an exact location or relative to the current directory.-->
<!--logging.file.path: Location of the log file. For instance, `/var/log`.-->
<!--logging.group.*: Log groups to quickly change multiple loggers at the same time. For instance, `logging.group.db=org.hibernate,org.springframework.jdbc`.-->
<!--logging.level.*: Log levels severity mapping. For instance, `logging.level.org.springframework=DEBUG`.-->
<!--logging.logback.rollingpolicy.clean-history-on-start: Whether to clean the archive log files on startup. false-->
<!--logging.logback.rollingpolicy.file-name-pattern: Pattern for rolled-over log file names. ${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz-->
<!--logging.logback.rollingpolicy.max-file-size: Maximum log file size. 10MB-->
<!--logging.logback.rollingpolicy.max-history: Maximum number of days archive log files are kept. 7-->
<!--logging.logback.rollingpolicy.total-size-cap: Total size of log backups to be kept. 0B-->
<!--logging.pattern.console: Appender pattern for output to the console. Supported only with the default Logback setup. %clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(-&#45;&#45;){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}-->

<!--logging.pattern.dateformat: Appender pattern for log date format. Supported only with the default Logback setup. yyyy-MM-dd HH:mm:ss.SSS-->
<!--logging.pattern.file:  Appender pattern for output to a file. Supported only with the default Logback setup. %d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } -&#45;&#45; [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}-->
<!--logging.pattern.level: Appender pattern for log level. Supported only with the default Logback setup. %5p-->
<!--logging.register-shutdown-hook: Register a shutdown hook for the logging system when it is initialized. Disabled automatically when deployed as a war file.true-->


