#spring:
#  shardingsphere:
#    datasource:
#     ds0:
#       driver-class-name: com.mysql.cj.jdbc.Driver
#       url: jdbc:mysql://localhost:3306/employee?characterEncoding=utf8&useSSL=false&serverTimezone=UTC&rewriteBatchedStatements=true
#       username: root
#       password: 123456

## 指定t_order表的数据分布情况，配置数据节点
#  spring.shardingsphere.sharding.tables.t_order.actual‐data‐nodes = m1.t_order_$‐>{1..2}
#  # 指定t_order表的主键生成策略为SNOWFLAKE
#  spring.shardingsphere.sharding.tables.t_order.key‐generator.column=order_id
#  spring.shardingsphere.sharding.tables.t_order.key‐generator.type=SNOWFLAKE
#  # 指定t_order表的分片策略，分片策略包括分片键和分片算法
#  spring.shardingsphere.sharding.tables.t_order.table‐strategy.inline.sharding‐column = order_id
#  spring.shardingsphere.sharding.tables.t_order.table‐strategy.inline.algorithm‐expression = t_order_$‐>{order_id % 2 + 1}
#  # 打开sql输出日志
#  spring.shardingsphere.props.sql.show = true

spring:
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:test;MODE=MYSQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: sa
    data: ../../../../sql/data.sql
    schema:
      - ../../../../sql/clean.sql
      - ../../../../sql/db_ddl.sql

mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

javax:
  cache:
    cacheName: user
    maxHeap: 2000
    tti: 600